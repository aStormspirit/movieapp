{"version":3,"sources":["GlobalStyle.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","contex.js","components/Header/index.js","config.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Heroimage/HeroImage.style.js","components/Heroimage/index.js","components/Grid/Grid.styled.js","components/Grid/index.js","components/Thumb/Thumb.style.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styled.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/Rate/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","components/Login.styles.js","components/Login.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Context","createContext","UserProvider","children","useState","undefined","state","setState","Provider","value","Header","useContext","user","console","log","to","src","RMDBLogo","alt","username","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_page","total_results","props","image","Text","HeroImage","title","text","Grid","header","Image","Thumb","clickable","Spinner","SearchBar","timeout","_prevProps","prevState","this","setSearchTerm","clearTimeout","setTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","Component","button","Button","callback","onClick","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","result","useEffect","SessionState","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","total_pages","BreadCrumb","movieTitle","Rate","setValue","min","max","e","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","sessionsState","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","Login","setUsername","setPassword","setUser","navigate","useNavigate","handleSubmit","session_id","handleInput","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfa7e178.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    --maxWidth: 1280px; \r\n    --white: #fff;\r\n    --lightGrey: #eee;\r\n    --medGrey: #353535; \r\n    --darkGrey: #1c1c1c;\r\n    --fontSuperBig: 2.5rem;\r\n    --fontBig: 1.5rem;\r\n    --fontMed: 1.2rem;\r\n    --fontSmall: 1rem;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'Abel', sans-serif;  \r\n  }\r\n  body {  \r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    h1 {\r\n      font-size: 2rem;\r\n      font-weight: 600;\r\n      color: var(--white);\r\n    }\r\n    h3 {\r\n      font-size: 1.1rem;\r\n      font-weight: 600;\r\n    }\r\n    p {\r\n      font-size: 1rem;\r\n      color: var(--white);\r\n    }\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  max-width: var(--maxWidth);\r\n  padding: 20px 0;\r\n  margin: 0 auto;\r\n  color: var(--white);\r\n  a {\r\n    color: var(--white);\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n  width: 200px;\r\n  @media screen and (max-width: 500px) {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n  width: 100px;\r\n  @media screen and (max-width: 500px) {\r\n    width: 80px;\r\n  }\r\n`;","import React, { useState, createContext } from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nconst UserProvider = ({ children }) => {\r\n  const [state, setState] = useState(undefined);\r\n\r\n  return (\r\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\r\n  );\r\n};\r\n\r\nexport default UserProvider;","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// API \r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\"\r\nimport TMDBLogo from \"../../images/tmdb_logo.svg\"\r\n// styles\r\nimport {Wrapper, Content, LogoImg, TMDBLogoImg} from './Header.styles'\r\n// context\r\nimport { Context } from '../../contex'\r\nimport userEvent from '@testing-library/user-event'\r\n\r\nconst Header = () => {\r\n    const [user] = useContext(Context)\r\n    console.log(user)\r\n\r\n    return(\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n            <LogoImg src={RMDBLogo} alt='rmbd-logo' />\r\n            </Link>\r\n            {user ? (\r\n          <span>Logged in as: {user.username}</span>\r\n        ) : (\r\n          <Link to='/login'>\r\n            <span>Log in</span>\r\n          </Link>\r\n        )}\r\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\r\n        </Content>\r\n    </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName)\n  return sessionState && JSON.parse(sessionState)\n}","import { useState,useEffect } from \"react\"\r\n// API\r\nimport API from '../API';\r\n// Local storage\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_page: 0,\r\n    total_results: 0\r\n}\r\n\r\nexport const useHomeFetch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [state,setState] = useState(initialState)\r\n    const [loading,setLoading] = useState(false)\r\n    const [error, setError] = useState(false)\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false)\r\n\r\n    console.log(searchTerm)\r\n\r\n    const fetchMovies = async (page, searchTerm= '') => {\r\n        try{\r\n            setError(false);\r\n            setLoading(true);\r\n\r\n            const movies = await API.fetchMovies(searchTerm, page);\r\n            \r\n            setState(prev => ({\r\n                ...movies,\r\n                result:\r\n                    page>1 ? [...prev.results, movies.results] : [...movies.results]\r\n            }))\r\n        }\r\n        catch {\r\n            setError(true)\r\n        }\r\n        setLoading(false)\r\n    };\r\n// initial render && search\r\n    useEffect(() => {\r\n        if (!searchTerm){\r\n            const SessionState = isPersistedState('homeState')\r\n\r\n            if(SessionState){\r\n                console.log('Grabbing from session storage')\r\n                setState(SessionState);\r\n                return;\r\n            }\r\n        }\r\n        console.log('Grabbing from API')\r\n        setState(initialState);\r\n        fetchMovies(1, searchTerm)\r\n    },[searchTerm]);\r\n// load more\r\n    useEffect(() => {\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page + 1, searchTerm);\r\n        setIsLoadingMore(false)\r\n\r\n    }, [state.page, searchTerm, isLoadingMore])\r\n\r\n// session storage\r\n    useEffect(() => {\r\n        if(!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state))\r\n    },[searchTerm, state])\r\n\r\n    return {state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore}\r\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${(props) =>\r\n    `linear-gradient(\r\n      to bottom, rgba(0,0,0,0)\r\n      39%,rgba(0,0,0,0)\r\n      41%,rgba(0,0,0,0.65)\r\n      100%\r\n    ),\r\n    url('${props.image}'), var(--darkGrey)`};\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroimage 1s;\r\n  @keyframes animateHeroimage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 40px;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n  p {\r\n    font-size: var(--fontMed);\r\n  \r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n  @media screen and (max-width: 720px) {\r\n    max-width: 100%;\r\n  }\r\n`;","import React from 'react'\r\nimport  PropTypes  from 'prop-types';\r\n// styled\r\nimport {Wrapper,Content,Text} from './HeroImage.style'\r\n\r\nconst HeroImage = ({image, title, text}) => (\r\n    <Wrapper image={image}>\r\n        <Content>\r\n            <Text>\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nHeroImage.propTypes = {\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string\r\n}\r\n\r\nexport default HeroImage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  h1 {\r\n    color: var(--medGrey);\r\n  }\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 2rem;\r\n`;","import React from 'react'\r\nimport  PropTypes  from 'prop-types';\r\n// styled\r\nimport {Wrapper, Content} from './Grid.styled'\r\n\r\nconst Grid = ({header, children}) => (\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>{children}</Content>\r\n    </Wrapper>\r\n)\r\n\r\nGrid.propTypes = {\r\n    header: PropTypes.string,\r\n}\r\n\r\nexport default Grid;","import styled from 'styled-components';\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  transition: all 0.3s;\r\n  object-fit: cover;\r\n  border-radius: 20px;\r\n  animation: animateThumb 0.5s;\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport  PropTypes  from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n// styles\r\nimport { Image } from './Thumb.style'\r\n\r\nconst Thumb = ({image, movieId, clickable}) => (\r\n    <div>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n            <Image src={image} alt='movie-thumb' />\r\n            </Link>\r\n        ) : (\r\n            <Image src={image} alt='movie-thumb' />\r\n        )\r\n        }\r\n    </div>\r\n)\r\n\r\nThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    clickable: PropTypes.bool\r\n}\r\n\r\nexport default Thumb;","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;","import styled from 'styled-components'\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid var(--lightGrey); \r\n  border-top: 5px solid var(--medGrey);\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  height: 55px;\r\n  background: var(--medGrey);\r\n  margin: 0 auto;\r\n  border-radius: 40px;\r\n  color: var(--white);\r\n  img {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 14px;\r\n    width: 30px;\r\n  }\r\n  input {\r\n    font-size: 28px;\r\n    position: absolute;\r\n    left: 0px;\r\n    margin: 8px 0;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: var(--white);\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    @media screen and (max-width: 720px) {\r\n      font-size: 28px;\r\n    }\r\n  }\r\n`;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Image\r\nimport searchIcon from '../../images/search-icon.svg';\r\n// Styles\r\nimport {Wrapper, Content} from './SearchBar.styled'\r\n\r\nclass SearchBar extends Component {\r\n  state = { value: '' };\r\n  timeout = null;\r\n\r\n  componentDidUpdate(_prevProps, prevState) {\r\n    if (this.state.value !== prevState.value) {\r\n      const { setSearchTerm } = this.props;\r\n\r\n      clearTimeout(this.timeout);\r\n\r\n      this.timeout = setTimeout(() => {\r\n        const { value } = this.state;\r\n        setSearchTerm(value);\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <Wrapper>\r\n        <Content>\r\n          <img src={searchIcon} alt='search-icon' />\r\n          <input\r\n            type='text'\r\n            placeholder='Search Movie'\r\n            onChange={event => this.setState({ value: event.currentTarget.value })}\r\n            value={value}\r\n          />\r\n        </Content>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  callback: PropTypes.func\r\n};\r\n\r\nexport default SearchBar;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.button`\r\n  display: block;\r\n  background: var(--darkGrey);\r\n  width: 25%;\r\n  min-width: 200px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  color: var(--white);\r\n  border: 0;\r\n  font-size: var(--fontBig);\r\n  margin: 20px auto;\r\n  transition: all 0.3s;\r\n  outline: none;\r\n  cursor: pointer;\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;","import React from 'react'\r\nimport  PropTypes  from 'prop-types';\r\n\r\nimport { Wrapper } from './Button.styles'\r\n\r\nconst Button = ({text, callback}) => (\r\n    <Wrapper type='button' onClick={callback}>\r\n        {text}\r\n    </Wrapper>\r\n)\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    callback: PropTypes.func\r\n}\r\n\r\nexport default Button;","import React from 'react'\r\n//api config\r\nimport {POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL} from '../config'\r\n//hooks\r\nimport { useHomeFetch } from '../hooks/useHomeFetch'\r\n//img\r\nimport NoImage from '../images/no_image.jpg'\r\n//component\r\nimport HeroImage from './Heroimage'\r\nimport Grid from './Grid'\r\nimport Thumb from './Thumb'\r\nimport Spinner from './Spinner'\r\nimport SearchBar from './SearchBar'\r\nimport Button from './Button'\r\n\r\nfunction Home() {\r\n    const { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore } = useHomeFetch();\r\n\r\n    console.log(state)\r\n\r\n    if (error) return <div>Something went wrong...</div>\r\n\r\n    return (\r\n        <>\r\n        {state.results[0] ? (\r\n        <HeroImage\r\n        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n        title={state.results[0].original_title}\r\n        text={state.results[0].overview}\r\n\r\n         />\r\n        ):null}\r\n        <SearchBar setSearchTerm={setSearchTerm} />\r\n        <Grid header={searchTerm ? 'Search result' : 'Popular Movies'}>\r\n            {state.results.map(movie => (\r\n              <Thumb\r\n              key={movie.id}\r\n              clickable\r\n              image={\r\n                movie.poster_path\r\n                  ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                  : NoImage\r\n              }\r\n              movieId={movie.id}\r\n            />\r\n    ))}\r\n        </Grid>\r\n        {loading && <Spinner />}\r\n        {state.page < state.total_pages && !loading && (\r\n          <Button text='Load More' callback={() => setIsLoadingMore(true)} />\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 70px;\r\n  background: var(--medGrey);\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: var(--maxWidth);\r\n  padding: 0 20px;\r\n  span {\r\n    font-size: var(--fontMed);\r\n    color: var(--white);\r\n    padding-right: 10px;\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport  PropTypes  from 'prop-types';\r\n// styles\r\nimport { Wrapper, Content } from './BreadCrumb.styles';\r\n\r\nconst BreadCrumb = ({movieTitle}) => (\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <span>Home</span>\r\n            </Link>\r\n            <span>|</span>\r\n            <span>{movieTitle}</span>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n    movieTitle: PropTypes.string\r\n}\r\n\r\nexport default BreadCrumb;","import React, {useState} from 'react'\r\n\r\nconst Rate = ({callback}) => {\r\n    const [value, setValue] = useState(5)\r\n\r\n    return(\r\n        <div>\r\n            <input\r\n            type='range'\r\n            min='1'\r\n            max='10'\r\n            value={value}\r\n            onChange={e => setValue(e.currentTarget.value)}\r\n            />\r\n            {value}\r\n            <p>\r\n                <button onClick={() => callback(value)}>Rate</button>\r\n            </p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Rate","import styled from 'styled-components'\r\nimport {IMAGE_BASE_URL, BACKDROP_SIZE} from '../../config'\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${(props) =>\r\n    props.backdrop\r\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\r\n      : '#000'};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieinfo 1s;\r\n  @keyframes animateMovieinfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  background: rgb(0, 0, 0, 0.7);\r\n  border-radius: 20px;\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 40px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n  .rating-director {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 25px;\r\n    margin: 0px 0 0 0;\r\n  }\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport  PropTypes  from 'prop-types';\r\n// components\r\nimport Thumb from '../Thumb'\r\nimport Rate from '../Rate'\r\n//config\r\nimport {IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE} from '../../config'\r\n// Image\r\nimport NoImage from '../../images/no_image.jpg'\r\n//Styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles'\r\n\r\n\r\nconst MovieInfo = ({movie}) => {\r\n    return (\r\n        <Wrapper backdrop={movie.backdrop_path} >\r\n            <Content>\r\n                <Thumb\r\n                image={\r\n                    movie.poster_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                    : NoImage\r\n                }\r\n                clickable={false}\r\n                 />\r\n                 <Text>\r\n                     <h1>{movie.title}</h1>\r\n                     <h3>PLOT</h3>\r\n                     <p>{movie.overview}</p>\r\n\r\n                     <div className='rating-directors'>\r\n                         <div>\r\n                             <h3>RATING</h3>\r\n                             <div className='score'>{movie.vote_average}</div>\r\n                         </div>\r\n                         <div className='director'>\r\n                             <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n                             {movie.directors.map(director => (\r\n                                 <p key={director.credit_id}>{director.name}</p>\r\n                             ))}\r\n                         </div>\r\n                     </div>\r\n                     <div>\r\n                         <p>Rate Movie</p>\r\n                         <Rate />\r\n                     </div>\r\n                 </Text>\r\n            </Content>\r\n        </Wrapper>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nMovieInfo.propTypes = {\r\n    movie: PropTypes.object\r\n}\r\n\r\nexport default MovieInfo\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  .column {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--medGrey);\r\n    border-radius: 20px;\r\n    margin: 0 20px;\r\n    flex: 1;\r\n    :first-child {\r\n      margin-left: 0;\r\n    }\r\n    :last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    .column {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport  PropTypes  from 'prop-types';\r\n// helpers\r\nimport {calcTime, convertMoney} from '../../helpers'\r\n//styles\r\nimport {Wrapper, Content} from './MovieInfoBar.styles'\r\n\r\nfunction MovieInfoBar({time, budget, revenue}) {\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <div className='column'>\r\n                    <p>Running time: {calcTime(time)}</p>\r\n                </div>\r\n                <div className='column'>\r\n                    <p>Budget: {convertMoney(budget)}</p>\r\n                </div>\r\n                <div className='column'>\r\n                    <p>Revenue: {convertMoney(revenue)}</p>\r\n                </div>\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nMovieInfoBar.propTypes = {\r\n    time: PropTypes.number,\r\n    budget: PropTypes.number,\r\n    revenue: PropTypes.number\r\n}\r\n\r\nexport default MovieInfoBar\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  color: var(--white);\r\n  background: var(--darkGrey);\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n  h3 {\r\n    margin: 10px 0 0 0;\r\n  }\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-radius: 15px;\r\n`;","import React from 'react'\r\nimport  PropTypes  from 'prop-types';\r\n//styles\r\nimport { Wrapper, Image } from './Actor.styles'\r\n\r\nconst Actor = ({name, character, imageUrl}) => (\r\n    \r\n    <Wrapper>\r\n        <Image src={imageUrl} alt='actor-thumb' />\r\n        <h3>{name}</h3>\r\n        <p>{character}</p>\r\n    </Wrapper>\r\n    \r\n)\r\n\r\nActor.propTypes = {\r\n    name: PropTypes.string,\r\n    character: PropTypes.string,\r\n    imageUrl: PropTypes.string\r\n}\r\n\r\nexport default Actor;","import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n// config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE} from '../config'\r\n// components\r\nimport BreadCrumb from './BreadCrumb';\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner'\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from './Actor'\r\n// hook\r\nimport { useMovieFetch} from '../hooks/useMovieFetch'\r\n// image\r\nimport NoImage from '../images/no_image.jpg'\r\n\r\n\r\nconst Movie = () => {\r\n    const { movieId } = useParams();\r\n\r\n    const {state: movie, loading, error} = useMovieFetch(movieId)\r\n\r\n    if (loading) return <Spinner />\r\n    if (error) return <div>Somthing went wrong...</div>\r\n\r\n    return (\r\n        <>\r\n        <BreadCrumb movieTitle={movie.original_title} />\r\n        <MovieInfo movie={movie} />\r\n        <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n        />\r\n        <Grid header='Actors'>\r\n            {movie.actors.map(actor => (\r\n                <Actor\r\n                key={actor.credit_id}\r\n                name={actor.name}\r\n                character={actor.character}\r\n                imageUrl={\r\n                    actor.profile_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : NoImage\r\n\r\n                }\r\n                 />\r\n            ))}\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n        \r\n\r\nexport default Movie\r\n","import { useState, useEffect } from \"react\";\r\nimport API from '../API';\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = movieId => {\r\n    const [state, setState] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async () => {\r\n            try{\r\n                setLoading(true);\r\n                setError(false);\r\n\r\n                const movie = await API.fetchMovie(movieId);\r\n                const credits = await API.fetchCredits(movieId)\r\n\r\n                const directors = credits.crew.filter(\r\n                    member => member.job === 'Director'\r\n                );\r\n\r\n                setState({\r\n                    ...movie,\r\n                    actors : credits.cast,\r\n                    directors\r\n                })\r\n\r\n                setLoading(false)\r\n\r\n            } catch (error) {\r\n                setError(true);\r\n            }\r\n        }\r\n\r\n        const sessionsState = isPersistedState(movieId);\r\n\r\n        if(sessionsState){\r\n            setState(sessionsState);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        \r\n        fetchMovie();\r\n    }, [movieId]);\r\n\r\n    useEffect(()=>{\r\n        sessionStorage.setItem(movieId, JSON.stringify(state))\r\n    },[movieId,state])\r\n\r\n    return {state, loading, error};\r\n};","import React from 'react'\r\n\r\nconst NotFound = () => \r\n        <div>\r\n            Not Found\r\n        </div>\r\n\r\nexport default NotFound\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  color: var(--darkGrey);\r\n  input {\r\n    width: 100%;\r\n    height: 30px;\r\n    border: 1px solid var(--darkGrey);\r\n    border-radius: 20px;\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n  }\r\n  .error {\r\n    color: red;\r\n  }\r\n`;","import React, {useState, useContext} from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport API from '../API'\r\n//Component\r\nimport Button from './Button'\r\n// styles\r\nimport { Wrapper } from './Login.styles'\r\n// context\r\nimport { Context } from '../contex'\r\n\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(false);\r\n  \r\n    const [_user, setUser] = useContext(Context);\r\n    const navigate = useNavigate();\r\n  \r\n    const handleSubmit = async () => {\r\n      setError(false);\r\n      try {\r\n        const requestToken = await API.getRequestToken();\r\n        const sessionId = await API.authenticate(\r\n          requestToken,\r\n          username,\r\n          password\r\n        );\r\n        console.log(sessionId);\r\n        setUser({ sessionId: sessionId.session_id, username });\r\n  \r\n        navigate('/');\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n  \r\n    const handleInput = e => {\r\n      const name = e.currentTarget.name;\r\n      const value = e.currentTarget.value;\r\n  \r\n      if (name === 'username') setUsername(value);\r\n      if (name === 'password') setPassword(value);\r\n    };\r\n    return(\r\n        <Wrapper>\r\n            {error && <div className='error'>There was an error!</div>}\r\n            <label>Username:</label>\r\n            <input\r\n            type='text'\r\n            value={username}\r\n            name='username'\r\n            onChange={handleInput}\r\n            />\r\n            <input\r\n            type='password'\r\n            value={password}\r\n            name='password'\r\n            onChange={handleInput}\r\n            />\r\n            <Button text='Login' callback={handleSubmit} />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react';\n// router\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n//style\nimport {GlobalStyle} from './GlobalStyle'\n//сomponents\nimport Header from './components/Header';\nimport Home from './components/Home'\nimport Movie from './components/Movie'\nimport NotFound from './components/NotFound'\nimport Login from './components/Login'\n// context\nimport UserProvider from './contex';\n\nconst App = ()  => \n   ( <Router>\n     <UserProvider>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/Login' element={<Login />} />\n        <Route path='/:movieId' element={<Movie />} />\n        <Route path='/*' element={<NotFound />} />\n      </Routes>\n      <GlobalStyle />\n      </UserProvider>\n    </Router>\n  );\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}